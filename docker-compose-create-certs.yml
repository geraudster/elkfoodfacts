version: '3'
services:
   create_certs:
     image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
     container_name: create_certs
     command: >
       bash -c '
        yum install -y -q -e 0 unzip;
        if [[ ! -f /certs/bundle.zip ]]; then
          bin/elasticsearch-certutil cert --silent --pem --in /tmp/instances.yml -out /certs/bundle.zip;
          unzip /certs/bundle.zip -d /certs;
        fi;
        chown -R 1000:0 /certs
        > /tmp/.kibana_creds.env
        '
     working_dir: /usr/share/elasticsearch
     volumes:
       - certs:/certs
#       - certs:$CERTS_DIR
       - ./elk-compose:/tmp
     networks:
       - stack
#     environment:
#       - xpack.security.http.ssl.enabled=true 
#       - xpack.security.http.ssl.key=$CERTS_DIR/create_certs/create_certs.key
#       - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
#       - xpack.security.http.ssl.certificate=$CERTS_DIR/create_certs/create_certs.crt
#

   init_passwords:
     image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
     container_name: init_passwords
     command: /tmp/init_users_and_passwords.sh
     working_dir: /usr/share/elasticsearch
     volumes:
       - certs:$CERTS_DIR
       - es-config:/usr/share/elasticsearch/config
       - ./elk-compose:/tmp
     networks:
       - stack
     environment:
       - xpack.security.http.ssl.enabled=true
       - xpack.security.http.ssl.key=$CERTS_DIR/create_certs/create_certs.key
       - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
       - xpack.security.http.ssl.certificate=$CERTS_DIR/create_certs/create_certs.crt


volumes:
  data-volume:
    driver: local
  certs:
    driver: local
  es-config:
    driver: local

networks:
  stack: {}
